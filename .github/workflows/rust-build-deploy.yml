name: Build & Deploy on merge to main

on:
  push:
    branches:
      - main

jobs:
  generate-and-push-tags:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
          fetch-depth: '0'

    - name: Install cargo-binstall
      run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

    - name: Install tq
      run: cargo binstall -y tomlq

    - name: "get version number for tag."
      run: |
        echo "NEW_TAG=$(tq -f Cargo.toml 'package.version')" | tee -a "$GITHUB_ENV"

    - name: Build
      run: cargo build --release --verbose
    - name: Test
      run: cargo test --release --verbose
    - name: Package Binary
      run: |
        mv target/release/tps . && tar czf tps-linux.tar.gz tps

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.NEW_TAG }}
        release_name: ${{ env.NEW_TAG }}
        draft: false
        prerelease: false

    - name: Upload Binary
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./tps-linux.tar.gz
        asset_name: tps-linux.tar.gz
        asset_content_type: application/gzip

    - name: "publish to crates.io"
      run: cargo publish --allow-dirty --token ${{ secrets.CRATES_TOKEN }}
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}
